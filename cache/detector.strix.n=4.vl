module detector (
  input r_0,
  input r_1,
  input r_2,
  input r_3,
  output reg g
);
  reg l0;
  reg l1;
  reg l2;
  initial begin
    l0 = 0;
    l1 = 0;
    l2 = 0;
  end
  assign g = (!((!((!l0) & !l1)) & !((!l0) & r_1))) & !l2;
  always @(posedge $global_clock) begin
    l0 <= !((!((!((!((!((!l0) & !r_1)) & (l1) & !((l0) & r_2))) & !((!r_0) & !l1))) & !l2)) & !(((!l0) & !l1) & (r_3) & l2));
    l1 <= (!((!r_0) & !l1)) & (!((l1) & (l0) & r_2)) & !l2;
    l2 <= ((!((r_3) & l2)) & !((!((!l0) & !l1)) & l2)) & !((!((l1) & (l0) & r_2)) & !l2);
  end
endmodule