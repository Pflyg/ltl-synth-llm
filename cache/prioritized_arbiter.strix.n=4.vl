module prioritized_arbiter (
  input r_0,
  input r_1,
  input r_2,
  input r_3,
  input r_m,
  output reg g_0,
  output reg g_1,
  output reg g_2,
  output reg g_3,
  output reg g_m
);
  reg l0;
  reg l1;
  reg l2;
  reg l3;
  initial begin
    l0 = 0;
    l1 = 0;
    l2 = 0;
    l3 = 0;
  end
  assign g_0 = (!((!l0) & (!((!(((!l2) & (!((!l3) & (l1)))) & (!r_m))) & (!(((l2) & (!l3)) & (!l1))))))) & (((!l3) & (!l1)) & (!l2));
  assign g_1 = !((!((((!l3) & (l1)) & (!l0)) & (!l2))) & (!((l0) & (((l2) & (!l3)) & (!l1)))));
  assign g_2 = (l2) & (((!l3) & (l1)) & (!l0));
  assign g_3 = (l3) & ((!((!(((l2) & (!l3)) & (l1))) & (!((!(((!l2) & (!((!l3) & (l1)))) & (l1))) & ((!l2) & (!((!l3) & (!l1)))))))) & (l0));
  assign g_m = !((!((!l0) & (!((!(((!l2) & (!((!l3) & (l1)))) & (!r_m))) & (!(((l2) & (!l3)) & (!l1))))))) & (!(((!l3) & (l1)) & ((!r_m) & (l0)))));
  always @(posedge $global_clock) begin
    l0 <= !((!(((l2) & (!l3)) & ((!((r_m) & (!((!(((!l2) & (!((!l3) & (l1)))) & (l1))) & (!((l2) & (!l3))))))) & ((!((!r_m) & ((!(((!l2) & (!((!l3) & (l1)))) & (l1))) & ((!l2) & (!((!l3) & (!l1))))))) & (!l0))))) & ((!(((!l0) & (!((!(((!l2) & (!((!l3) & (l1)))) & (!r_m))) & (!(((l2) & (!l3)) & (!l1)))))) & ((!(((l2) & (!l3)) & (l1))) & (!((!(((!l2) & (!((!l3) & (l1)))) & (l1))) & ((!l2) & (!((!l3) & (!l1))))))))) & (!((!((!(((l2) & (!l3)) & (l1))) & (!((!(((!l2) & (!((!l3) & (l1)))) & (l1))) & ((!l2) & (!((!l3) & (!l1)))))))) & (l0)))));
    l1 <= (!((!((!((!(((l2) & (!l3)) & (l1))) & (!((!(((!l2) & (!((!l3) & (l1)))) & (l1))) & ((!l2) & (!((!l3) & (!l1)))))))) & (r_m))) & ((!(((!l3) & (!l1)) & (!r_m))) & (l0)))) & (!((!((r_m) & (!((!(((!l2) & (!((!l3) & (l1)))) & (l1))) & (!((l2) & (!l3))))))) & ((!((!r_m) & ((!(((!l2) & (!((!l3) & (l1)))) & (l1))) & ((!l2) & (!((!l3) & (!l1))))))) & (!l0))));
    l2 <= (!(((!(((l2) & (!l3)) & (l1))) & (l0)) & (!((!((r_m) & (!((!(((!l2) & (!((!l3) & (l1)))) & (l1))) & (!((l2) & (!l3))))))) & (((!l3) & (!l1)) & (!(((!l2) & (!((!l3) & (l1)))) & (!r_m)))))))) & (!((!(((!l3) & (!l1)) & (!(((!l2) & (!((!l3) & (l1)))) & (!r_m))))) & ((!((!r_m) & ((!(((!l2) & (!((!l3) & (l1)))) & (l1))) & ((!l2) & (!((!l3) & (!l1))))))) & (!l0))));
    l3 <= !((!((!((!(((l2) & (!l3)) & (l1))) & (!((!l2) & (!((!l3) & (!l1))))))) & ((!((!r_m) & ((!(((!l2) & (!((!l3) & (l1)))) & (l1))) & ((!l2) & (!((!l3) & (!l1))))))) & (!l0)))) & (!((r_m) & ((l0) & (((l2) & (!l3)) & (!l1))))));
  end
endmodule