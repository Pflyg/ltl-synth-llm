module ltl2dba_Q(p_0, p_1, acc);
  input p_0;
  input p_1;
  output acc;
  reg [2:0] state;

  assign acc = ((state == 5) && 1 || (state == 1) && p_0 || (state == 7) && p_0 || (state == 2) && p_1 || (state == 6) && p_0 || (state == 4) && 1 || (state == 0) && 1) ? 1 : 0;

  initial
  begin
    state = 0;
  end
  always @($global_clock)
  begin
    case(state)
      6: if (p_0)
           state = 4;
         else 
           state = 1;

      0: if ((!p_1 && p_0))
           state = 2;
         else if ((p_1 && !p_0))
           state = 5;
         else if ((p_1 && p_0))
           state = 4;
         else 
           state = 7;

      4: 
           state = 4;

      7: if ((p_1 && p_0))
           state = 4;
         else if ((p_1 && !p_0))
           state = 1;
         else if ((!p_1 && !p_0))
           state = 7;
         else 
           state = 2;

      5: if (p_0)
           state = 4;
         else if ((!p_1 && !p_0))
           state = 1;
         else 
           state = 5;

      2: if (!p_1)
           state = 2;
         else 
           state = 4;

      1: if (!p_0)
           state = 1;
         else 
           state = 4;

      3: if (p_0)
           state = 4;
         else 
           state = 6;

    endcase
  end
endmodule
