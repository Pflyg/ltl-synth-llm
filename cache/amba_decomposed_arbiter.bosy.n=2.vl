module amba_decomposed_arbiter(allready, hbusreq_0, hbusreq_1, decide, busreq, hgrant_0, hgrant_1);
  input allready;
  input hbusreq_0;
  input hbusreq_1;
  output decide;
  output busreq;
  output hgrant_0;
  output hgrant_1;
  reg [1:0] state;

  assign decide = ((state == 3) && (!(!hbusreq_1 && !hbusreq_0) && allready) || (state == 2) && 1 || (state == 1) && (hbusreq_1 && allready)) ? 1 : 0;
  assign busreq = ((state == 0) && hbusreq_0 || (state == 3) && hbusreq_1 || (state == 1) && hbusreq_0) ? 1 : 0;
  assign hgrant_0 = ((state == 0) && 1 || (state == 2) && 1 || (state == 1) && 1) ? 1 : 0;
  assign hgrant_1 = ((state == 3) && 1 || (state == 2) && 1) ? 1 : 0;

  initial
  begin
    state = 0;
  end
  always @($global_clock)
  begin
    case(state)
      3: if ((!(!hbusreq_1 && !hbusreq_0) && allready))
           state = 1;
         else 
           state = 3;

      1: if ((hbusreq_1 && allready))
           state = 3;
         else 
           state = 1;

      0: if ((!(hbusreq_0 && !allready) && !hbusreq_1))
           state = 0;
         else 
           state = 1;

      2: if (1)
           state = 3;
         else 
           state = 1;

    endcase
  end
endmodule
