module load_balancer(idle, request_0, request_1, request_2, request_3, grant_0, grant_1, grant_2, grant_3);
  input idle;
  input request_0;
  input request_1;
  input request_2;
  input request_3;
  output grant_0;
  output grant_1;
  output grant_2;
  output grant_3;
  reg [1:0] state;

  assign grant_0 = ((state == 0) && request_0 || (state == 3) && request_0 || (state == 1) && (request_0 && idle) || (state == 2) && (request_0 && idle)) ? 1 : 0;
  assign grant_1 = ((state == 0) && request_0 || (state == 1) && !(!(!request_0 && idle && request_3 && !request_2 && !request_0 && idle && request_1) && !(!(!request_3 && !request_0 && !request_2 && idle && request_1) && !(!request_0 && idle && request_1 && request_2 && !request_3) && !(!request_3 && idle && !request_0 && request_2 && !request_1) && !(!request_0 && idle && request_3 && !request_2 && !request_1) && !request_0 && idle && request_3 && request_2 && !request_1) && !(!(!request_3 && !request_0 && !request_2 && idle && request_1) && !(!request_0 && idle && request_1 && request_2 && !request_3) && !(!request_3 && idle && !request_0 && request_2 && !request_1) && !(!request_0 && idle && request_3 && !request_2 && !request_1) && !request_0 && idle && !request_3 && !request_0 && !request_2) && !(!request_3 && idle && !request_0 && request_2 && !request_1) && !(!request_0 && idle && request_1 && request_2 && !request_3) && !(!request_0 && idle && request_1 && request_2 && request_3) && !(!request_3 && !request_0 && !request_2 && idle && request_1) && !(request_0 && idle)) || (state == 2) && (request_0 && idle)) ? 1 : 0;
  assign grant_2 = ((state == 0) && !(!(!request_0 && idle && request_1 && request_2 && request_3) && !(!request_3 && !request_0 && !request_2 && idle && request_1) && !request_0 && !(!request_0 && idle && request_3 && !request_2 && !request_0 && idle && request_1) && !(!(!request_3 && !request_0 && !request_2 && idle && request_1) && !(!request_0 && idle && request_1 && request_2 && !request_3) && !(!request_3 && idle && !request_0 && request_2 && !request_1) && !(!request_0 && idle && request_3 && !request_2 && !request_1) && !request_0 && idle && request_3 && request_2 && !request_1) && !(!(!request_3 && !request_0 && !request_2 && idle && request_1) && !(!request_0 && idle && request_1 && request_2 && !request_3) && !(!request_3 && idle && !request_0 && request_2 && !request_1) && !(!request_0 && idle && request_3 && !request_2 && !request_1) && !request_0 && idle && !request_3 && !request_0 && !request_2) && !(!request_3 && idle && !request_0 && request_2 && !request_1) && !(!request_0 && idle && request_1 && request_2 && !request_3)) || (state == 1) && (request_0 && idle) || (state == 2) && (request_0 && idle)) ? 1 : 0;
  assign grant_3 = ((state == 0) && request_0 || (state == 1) && (request_0 && idle) || (state == 2) && idle) ? 1 : 0;

  initial
  begin
    state = 0;
  end
  always @($global_clock)
  begin
    case(state)
      0: if ((!request_0 && idle && request_1))
           state = 1;
         else 
           state = 3;

      3: if (!(!(!request_3 && !request_0 && !request_2 && idle && request_1) && !(!request_0 && idle && request_1 && request_2 && !request_3)))
           state = 1;
         else if (!(!(!(!request_3 && !request_0 && !request_2 && idle && request_1) && !(!request_0 && idle && request_1 && request_2 && !request_3) && !(!request_3 && idle && !request_0 && request_2 && !request_1) && !(!request_0 && idle && request_3 && !request_2 && !request_1) && !request_0 && idle && !request_3 && !request_0 && !request_2) && !request_0 && idle))
           state = 3;
         else if ((!request_3 && idle && !request_0 && request_2 && !request_1))
           state = 0;
         else 
           state = 2;

      2: if (!(!(!request_0 && idle && request_1 && request_2 && request_3) && !(!request_3 && idle && !request_0 && request_2 && !request_1) && !(!request_0 && idle && request_1 && request_2 && !request_3) && !(!(!request_3 && !request_0 && !request_2 && idle && request_1) && !(!request_0 && idle && request_1 && request_2 && !request_3) && !(!request_3 && idle && !request_0 && request_2 && !request_1) && !(!request_0 && idle && request_3 && !request_2 && !request_1) && !request_0 && idle && request_3 && request_2 && !request_1)))
           state = 0;
         else if (!(!(!request_0 && !idle) && !(!request_3 && !request_0 && !request_2 && idle && request_1) && !(!request_0 && idle && request_3 && !request_2 && !request_0 && idle && request_1)))
           state = 1;
         else 
           state = 3;

      1: if (!(!request_3 && idle && !request_0))
           state = 2;
         else if (!(!(!request_3 && idle && !request_0 && request_2 && !request_1) && !(!request_0 && idle && request_1 && request_2 && !request_3)))
           state = 0;
         else if ((!request_3 && !request_0 && !request_2 && idle && request_1))
           state = 1;
         else 
           state = 3;

    endcase
  end
endmodule
