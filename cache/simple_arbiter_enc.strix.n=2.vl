module simple_arbiter_enc (
  input request_0,
  output reg grant_0,
  output reg grant_1
);
  reg l0;
  reg l1;
  reg l2;
  initial begin
    l0 = 0;
    l1 = 0;
    l2 = 0;
  end
  assign grant_0 = ((!((l0) & (!l1))) & (!((!((!l2) & (l0))) & (l1)))) & (!(((!l2) & (!l0)) & (!request_0)));
  assign grant_1 = 1;
  always @(posedge $global_clock) begin
    l0 <= !((!((!((l0) & (!l1))) & (!((!((!l2) & (l0))) & (l1))))) & (!((!request_0) & (!((!((!l2) & (l0))) & (l1))))));
    l1 <= (!((!l2) & ((!((!((l0) & (!l1))) & (!((!((!l2) & (l0))) & (l1))))) & (!((!request_0) & (!((!((!l2) & (l0))) & (l1)))))))) & ((request_0) & (!((!((!l2) & (l0))) & (l1))));
    l2 <= !((!(((!request_0) & (!((!((!l2) & (l0))) & (l1)))) & ((!((!l2) & (!l0))) & (!((l0) & (!l1)))))) & (!((!l2) & ((!((!((l0) & (!l1))) & (!((!((!l2) & (l0))) & (l1))))) & (!((!request_0) & (!((!((!l2) & (l0))) & (l1)))))))));
  end
endmodule