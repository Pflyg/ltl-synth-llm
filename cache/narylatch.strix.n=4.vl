module narylatch (
  input in_0,
  input in_1,
  input in_2,
  input in_3,
  input upd,
  output reg out_0,
  output reg out_1,
  output reg out_2,
  output reg out_3
);
  reg l0;
  reg l1;
  reg l2;
  reg l3;
  reg l4;
  initial begin
    l0 = 0;
    l1 = 0;
    l2 = 0;
    l3 = 0;
    l4 = 0;
  end
  assign out_0 = (!((upd) & (!((in_0) & (!(((!(((!l2) & ((!l0) & (!l1))) & ((!l3) & (l4)))) & (!((!((!l2) & ((!l0) & (!l1)))) & ((l3) & (!l4))))) & (l4))))))) & (!(((!(((!l2) & ((!l0) & (!l1))) & ((!l3) & (l4)))) & (!((!((!l2) & ((!l0) & (!l1)))) & ((l3) & (!l4))))) & (!upd)));
  assign out_1 = (!((upd) & (!((!(((!(((!l2) & ((!l0) & (!l1))) & ((!l3) & (l4)))) & (!((!((!l2) & ((!l0) & (!l1)))) & ((l3) & (!l4))))) & (l4))) & (in_1))))) & (!(((!(((l2) & (!l4)) & (!((!l0) & (!l1))))) & (!upd)) & ((!(((!l2) & ((!l0) & (!l1))) & ((!l3) & (l4)))) & (!(((!l2) & ((!l0) & (!l1))) & ((l3) & (!l4)))))));
  assign out_2 = !((!((!(((!l4) & (l1)) & (!l0))) & (!((!((!(((!(((!l4) & (l1)) & (!l0))) & (!(((l2) & (!l4)) & ((!l0) & (!l1))))) & ((!(((!l2) & ((!l0) & (!l1))) & ((!l3) & (l4)))) & (!(((!l2) & ((!l0) & (!l1))) & ((l3) & (!l4))))))) & (!upd))) & (!(((!l4) & (l1)) & (!upd))))))) & (!((in_2) & ((upd) & (!(((!(((!l2) & ((!l0) & (!l1))) & ((!l3) & (l4)))) & (!((!((!l2) & ((!l0) & (!l1)))) & ((l3) & (!l4))))) & (l4)))))));
  assign out_3 = !((!((in_3) & ((upd) & (!(((!(((!l2) & ((!l0) & (!l1))) & ((!l3) & (l4)))) & (!((!((!l2) & ((!l0) & (!l1)))) & ((l3) & (!l4))))) & (l4)))))) & (!((!(((!(((!l4) & (l1)) & (!l0))) & (!(((l2) & (!l4)) & ((!l0) & (!l1))))) & ((!(((!l2) & ((!l0) & (!l1))) & ((!l3) & (l4)))) & (!(((!l2) & ((!l0) & (!l1))) & ((l3) & (!l4))))))) & (!upd))));
  always @(posedge $global_clock) begin
    l0 <= !((!((!l4) & ((!upd) & (l0)))) & (!(((upd) & (!(((!(((!l2) & ((!l0) & (!l1))) & ((!l3) & (l4)))) & (!((!((!l2) & ((!l0) & (!l1)))) & ((l3) & (!l4))))) & (l4)))) & (!in_3))));
    l1 <= !((!((!((!(((!(((!l2) & ((!l0) & (!l1))) & ((!l3) & (l4)))) & (!((!((!l2) & ((!l0) & (!l1)))) & ((l3) & (!l4))))) & (l4))) & ((in_2) & (in_3)))) & (!((!((in_3) & ((upd) & (!(((!(((!l2) & ((!l0) & (!l1))) & ((!l3) & (l4)))) & (!((!((!l2) & ((!l0) & (!l1)))) & ((l3) & (!l4))))) & (l4)))))) & (!((in_2) & ((upd) & (!(((!(((!l2) & ((!l0) & (!l1))) & ((!l3) & (l4)))) & (!((!((!l2) & ((!l0) & (!l1)))) & ((l3) & (!l4))))) & (l4)))))))))) & (!(((!l4) & (l1)) & (!upd))));
    l2 <= (!(((upd) & (!((!(((!(((!l2) & ((!l0) & (!l1))) & ((!l3) & (l4)))) & (!((!((!l2) & ((!l0) & (!l1)))) & ((l3) & (!l4))))) & (l4))) & (in_1)))) & (!((!(((!(((!l2) & ((!l0) & (!l1))) & ((!l3) & (l4)))) & (!((!((!l2) & ((!l0) & (!l1)))) & ((l3) & (!l4))))) & (l4))) & ((in_2) & (in_3)))))) & ((!((upd) & (((!(((!(((!l2) & ((!l0) & (!l1))) & ((!l3) & (l4)))) & (!((!((!l2) & ((!l0) & (!l1)))) & ((l3) & (!l4))))) & (l4))) & ((in_2) & (in_3))) & (in_1)))) & (!((!upd) & (!((l2) & (!l4))))));
    l3 <= !((!((upd) & (!((!((!in_0) & (((!(((!(((!l2) & ((!l0) & (!l1))) & ((!l3) & (l4)))) & (!((!((!l2) & ((!l0) & (!l1)))) & ((l3) & (!l4))))) & (l4))) & ((in_2) & (in_3))) & (in_1)))) & (!(((in_0) & (!(((!(((!l2) & ((!l0) & (!l1))) & ((!l3) & (l4)))) & (!((!((!l2) & ((!l0) & (!l1)))) & ((l3) & (!l4))))) & (l4)))) & (!(((!(((!(((!l2) & ((!l0) & (!l1))) & ((!l3) & (l4)))) & (!((!((!l2) & ((!l0) & (!l1)))) & ((l3) & (!l4))))) & (l4))) & ((in_2) & (in_3))) & (in_1))))))))) & (!(((l3) & (!l4)) & (!upd))));
    l4 <= ((!((upd) & (!((!((!in_0) & (((!(((!(((!l2) & ((!l0) & (!l1))) & ((!l3) & (l4)))) & (!((!((!l2) & ((!l0) & (!l1)))) & ((l3) & (!l4))))) & (l4))) & ((in_2) & (in_3))) & (in_1)))) & (!(((in_0) & (!(((!(((!l2) & ((!l0) & (!l1))) & ((!l3) & (l4)))) & (!((!((!l2) & ((!l0) & (!l1)))) & ((l3) & (!l4))))) & (l4)))) & (!(((!(((!(((!l2) & ((!l0) & (!l1))) & ((!l3) & (l4)))) & (!((!((!l2) & ((!l0) & (!l1)))) & ((l3) & (!l4))))) & (l4))) & ((in_2) & (in_3))) & (in_1))))))))) & (!(((l3) & (!l4)) & (!upd)))) & ((!((upd) & (!((in_0) & (!(((!(((!l2) & ((!l0) & (!l1))) & ((!l3) & (l4)))) & (!((!((!l2) & ((!l0) & (!l1)))) & ((l3) & (!l4))))) & (l4))))))) & (!(((!(((!l2) & ((!l0) & (!l1))) & ((!l3) & (l4)))) & (!((!((!l2) & ((!l0) & (!l1)))) & ((l3) & (!l4))))) & (!upd))));
  end
endmodule