module detector (
  input r_0,
  input r_1,
  input r_2,
  input r_3,
  input r_4,
  input r_5,
  input r_6,
  input r_7,
  input r_8,
  input r_9,
  input r_10,
  input r_11,
  input r_12,
  input r_13,
  input r_14,
  input r_15,
  output reg g
);
  reg l0;
  reg l1;
  reg l2;
  reg l3;
  reg l4;
  initial begin
    l0 = 0;
    l1 = 0;
    l2 = 0;
    l3 = 0;
    l4 = 0;
  end
  assign g = ((!l3) & ((!l0) & (!l2))) & ((!l4) & (!((l1) & (!r_1))));
  always @(posedge $global_clock) begin
    l0 <= (!((!((r_15) & (((!l3) & ((!l0) & (!l2))) & (!l1)))) & (l4))) & (!((!((!((!((!((!((!((l3) & (r_8))) & ((!((!l3) & (r_0))) & (!l2)))) & (!((!((!((!l3) & (!r_4))) & (!((l3) & (!r_12))))) & (l2))))) & (l0))) & (!(((!((!((!((!r_3) & (!l3))) & (!((l3) & (!r_11))))) & (l2))) & (!((l3) & ((!r_7) & (!l2))))) & ((!l0) & (!(((!l3) & (r_0)) & (!l2)))))))) & (!l1))) & ((!l4) & (!(((l1) & (!((!((!((!((!l3) & (!r_2))) & (!((l3) & (!r_10))))) & (!l2))) & ((l0) & (!(((!((!l3) & (r_6))) & (l2)) & (!((l3) & (r_14))))))))) & (!((!((!((!((!l3) & (r_1))) & (!((l3) & (r_9))))) & (!l2))) & ((!((l2) & (!((!((l3) & (r_13))) & (!((!l3) & (r_5))))))) & (!l0)))))))));
    l1 <= (!l4) & (!((!((l1) & (!((!((!((!((!l3) & (!r_2))) & (!((l3) & (!r_10))))) & (!l2))) & ((l0) & (!(((!((!l3) & (r_6))) & (l2)) & (!((l3) & (r_14)))))))))) & (!(((!l1) & (!((!l0) & (!(((!l3) & (r_0)) & (!l2)))))) & (!((!((!((!((l3) & (r_8))) & ((!((!l3) & (r_0))) & (!l2)))) & (!((!((!((!l3) & (!r_4))) & (!((l3) & (!r_12))))) & (l2))))) & (l0)))))));
    l2 <= (!((!(((!((!l3) & (r_6))) & (l2)) & (!((l3) & (r_14))))) & (!((!((!((!((!l3) & (!r_2))) & (!((l3) & (!r_10))))) & (!l2))) & (!(((l0) & (l1)) & (l2))))))) & ((!l4) & (!((!((l0) & (l1))) & (!l2))));
    l3 <= (!((!l3) & (!((((l0) & (l1)) & (l2)) & (r_6))))) & ((!l4) & (!((((l0) & (l1)) & (l2)) & ((l3) & (r_14)))));
    l4 <= (!((l4) & (!((!r_15) & (((!l3) & ((!l0) & (!l2))) & (!l1)))))) & (!((!l4) & (!((((l0) & (l1)) & (l2)) & ((l3) & (r_14))))));
  end
endmodule