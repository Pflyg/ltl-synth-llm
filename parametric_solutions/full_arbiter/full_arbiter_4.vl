
module full_arbiter (
  input [3:0] r,
  input clk,
  output reg [3:0] g
);
//Needed because of lack of break; statement support
  reg brk = 0;
  reg [3:0] requests = '0;
  reg [3:0] i = '0;
  reg [3:0] istop = 0;
  initial g = '0;
  always @(posedge clk) begin
    g = '0;
    for (i = 0; i < 4; i = i + 1) begin
      if(!brk || istop - 1 != i)
        requests[i] = requests[i] | r[i];
    end
    if(istop >= 4)
      istop = '0;
    brk = 0;
    for (i = 0; i < 4; i = i + 1) begin
      //continue where you left off
      if(i >= istop && 
         //loop "break"
         !brk &&
         //only act if there is a request
         requests[i] == 1) begin
        
        requests[i] = 0;
        g[i] = 1;
        istop = i + 1;
        brk = 1;
      end
    end
    if(brk == 0)
      istop = '0;
  end
endmodule